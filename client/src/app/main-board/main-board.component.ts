import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { EventService } from './../event.service';
declare function require(name:string);
var GoogleMapsLoader = require('google-maps');
import { SessionService } from '../session.service';
//socket.io
//import { FormControl } from '@angular/common';
import { UpdateEventsService } from '../update-events.service';

@Component({
  //moduleId: module.id,
  selector: 'app-main-board',
  templateUrl: './main-board.component.html',
  styleUrls: ['./main-board.component.css'],
  providers: [EventService, UpdateEventsService]
})
export class MainBoardComponent implements OnInit {

  user: any;
  eventS: any;
  eventLocation: Object;
  error: string;
  infobubble: any;
  //socket.io
  connection: any;

  constructor(
    private session: SessionService,
    private route: ActivatedRoute,
    private EventService: EventService,
    //socket.io
    private UpdateEventsService: UpdateEventsService
  ) { }

  ngOnInit() {

    this.session.isLoggedIn()
      .subscribe(
      (user) => {console.log(user);this.successCb(user)}
      );
    const updateEvent = this.UpdateEventsService;
    const eventS = this.EventService;
    GoogleMapsLoader.KEY = 'AIzaSyBmHIjgfyzkhCKmCgMBGJgsr7Ad4rRuiAY';

    GoogleMapsLoader.load(function(google) {

      var styles = [
    {
        "featureType": "all",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "color": "#ffffff"
            }
        ]
    },
    {
        "featureType": "all",
        "elementType": "labels.text.stroke",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "color": "#424b5b"
            },
            {
                "weight": 2
            },
            {
                "gamma": "1"
            }
        ]
    },
    {
        "featureType": "all",
        "elementType": "labels.icon",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "administrative",
        "elementType": "geometry",
        "stylers": [
            {
                "weight": 0.6
            },
            {
                "color": "#545b6b"
            },
            {
                "gamma": "0"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#545b6b"
            },
            {
                "gamma": "1"
            },
            {
                "weight": "10"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#666c7b"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#545b6b"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#424a5b"
            },
            {
                "lightness": "0"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#666c7b"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#2e3546"
            }
        ]
    }
];
      // if available, fetches browser geolocalitzacion
      navigator.geolocation.getCurrentPosition(function(position) {
        var pos = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };

        // if not, fetches static geolocalitzacion
        //Puerta del Sol coords: 40.417160, -3.703539
        const location = { lat: -12.363, lng: 120.044 };


        //   const eventlocation = [
        //   { lat: -12.363, lng: 120.044 },
        //   { lat: -18.363, lng: 160.044 }
        // ]

        // console.log(locations);

        const map = new google.maps.Map(document.getElementById('map'), {
          zoom: 13,
          center: location,
          zoomControl: false,
          scaleControl: false,
          streetViewControl: false,
          mapTypeControl: false,
        });

        ///infoWindow.setPosition(pos);
        // infoWindow.setContent('Location found.');
        map.setCenter(pos);

        // markers

        const music = {
        path: 'M78.5,23.2c0-1.9-1.6-3.5-3.5-3.5h-0.3l-34.1,7c-1.8,0.2-3.2,1.7-3.2,3.5v30.6c-1.6-1-3.5-1.6-5.5-1.6c-5.8,0-10.5,4.7-10.5,10.5c0,5.8,4.8,10.5,10.6,10.5s10.5-4.7,10.5-10.5c0-0.2,0-0.3,0-0.5l0,0V31.5l31-6.4v29.7c-1.6-1-3.5-1.6-5.5-1.6c-5.8,0-10.5,4.7-10.5,10.5S62.2,74.2,68,74.2s10.5-4.7,10.5-10.5c0-0.2,0-0.3,0-0.5l0,0V23.2z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const shopping = {
        path: 'M78.1,38.9H60.8l-5-18.5l-3.6,1l4.7,17.6H43.1l4.7-17.6l-3.6-1l-5,18.5H21.9c-3.1,0-5.6,2.5-5.6,5.6c0,2.8,2,5.1,4.7,5.5l6.6,26.4h45.2l6.6-26.4c2.6-0.5,4.5-2.8,4.5-5.5C83.8,41.4,81.3,38.9,78.1,38.9z M27.2,52.1h8.6l0.9,7.5h-7.6L27.2,52.1z M31.9,70.8L30,63.3h7.2l0.9,7.5H31.9z M48.2,70.8h-6.3L41,63.3h7.2L48.2,70.8L48.2,70.8z M48.2,59.6h-7.7l-0.9-7.5h8.6V59.6z M58.2,70.8h-6.3v-7.5h7.2L58.2,70.8z M59.6,59.6h-7.7v-7.5h8.6L59.6,59.6z M68.2,70.8H62l0.9-7.5h7.2L68.2,70.8z M71.1,59.6h-7.6l0.9-7.5h8.6L71.1,59.6z M78.1,46.4H21.9c-1,0-1.9-0.8-1.9-1.9c0-1,0.8-1.9,1.9-1.9h56.3c1,0,1.9,0.8,1.9,1.9C80,45.6,79.2,46.4,78.1,46.4z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const fitness = {
        path: 'M49,15.4l-4.7-4.7l0.9-0.9c1.3-1.3,1.3-3.5,0-4.9s-3.5-1.3-4.9,0l-0.9,0.9L34.6,1l-4.9,4.9l-4.3-4.3l-4.9,4.9l9,9l-14,14.1l0,0l-9-9l-4.9,4.9l4.3,4.3L1,34.6l4.7,4.7l-0.9,0.9c-1.3,1.3-1.3,3.5,0,4.9s3.5,1.3,4.9,0l0.9-0.9l4.7,4.7l4.9-4.9l4.3,4.3l4.9-4.9l-9-9l0,0l14.1-14.1l9,9l4.9-4.9l-4.3-4.3L49,15.4z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const eat = {
        path: 'M9.703,34.17c0.315,0.124,0.679,0.172,1.017,0.172c0,0,68.56,0,68.56,0c0.338,0,0.702-0.048,1.018-0.172   c0.397-0.156,0.681-0.426,0.892-0.792c0.192-0.336,0.188-0.752,0.194-1.128c0.008-0.447-0.012-0.894-0.038-1.339   c-0.106-1.787-0.428-3.558-0.987-5.259c-0.346-1.053-0.778-2.08-1.28-3.067c-0.463-0.912-0.97-1.8-1.527-2.657   c-0.483-0.745-1.003-1.466-1.557-2.161c-2.003-2.521-4.494-4.623-7.352-6.085c-0.556-0.284-1.124-0.543-1.706-0.777   c-1.818-0.731-3.73-1.194-5.661-1.511c-4.477-0.735-9.073-0.715-13.599-0.746c-0.892-0.006-4.46-0.006-5.352,0   c-4.525,0.031-9.122,0.011-13.599,0.746c-1.931,0.317-3.843,0.78-5.661,1.511c-0.582,0.234-1.151,0.494-1.706,0.777   c-2.857,1.462-5.349,3.564-7.352,6.085c-0.553,0.695-1.073,1.416-1.557,2.161c-0.556,0.857-1.064,1.746-1.527,2.657   c-0.501,0.988-0.935,2.014-1.28,3.067c-0.559,1.701-0.881,3.472-0.987,5.259c-0.026,0.445-0.046,0.892-0.039,1.339   c0.007,0.376,0.002,0.792,0.195,1.128C9.022,33.744,9.305,34.015,9.703,34.17z M64.376,14.75c1.012,0,1.832,0.388,1.832,0.866   c0,0.478-0.82,0.865-1.832,0.865c-1.013,0-1.833-0.388-1.833-0.865C62.543,15.138,63.363,14.75,64.376,14.75z M58.096,12.238   c1.013,0,1.833,0.388,1.833,0.865c0,0.479-0.82,0.866-1.833,0.866c-1.012,0-1.832-0.387-1.832-0.866   C56.264,12.626,57.084,12.238,58.096,12.238z M51.459,14.75c1.012,0,1.832,0.388,1.832,0.866c0,0.478-0.82,0.865-1.832,0.865   c-1.013,0-1.833-0.388-1.833-0.865C49.626,15.138,50.446,14.75,51.459,14.75z M45.179,12.238c1.012,0,1.833,0.388,1.833,0.865   c0,0.479-0.82,0.866-1.833,0.866s-1.832-0.387-1.832-0.866C43.347,12.626,44.167,12.238,45.179,12.238z M38.541,14.75   c1.012,0,1.833,0.388,1.833,0.866c0,0.478-0.821,0.865-1.833,0.865c-1.012,0-1.833-0.388-1.833-0.865   C36.708,15.138,37.529,14.75,38.541,14.75z M32.262,12.238c1.013,0,1.833,0.388,1.833,0.865c0,0.479-0.82,0.866-1.833,0.866   c-1.012,0-1.832-0.387-1.832-0.866C30.43,12.626,31.25,12.238,32.262,12.238z M25.624,14.75c1.012,0,1.833,0.388,1.833,0.866   c0,0.478-0.821,0.865-1.833,0.865c-1.012,0-1.833-0.388-1.833-0.865C23.791,15.138,24.612,14.75,25.624,14.75z M77.156,47.633   H66.595l-18.933,5.736c-2.667,1.102-5.319,0.002-5.324,0h0l-18.933-5.736H12.844c-2.335,0-4.229,1.893-4.229,4.229v5.881   c0,2.336,1.893,4.229,4.229,4.229h64.312c2.335,0,4.229-1.893,4.229-4.229v-5.881C81.385,49.525,79.491,47.633,77.156,47.633z    M10.613,41.657c1.037,0,1.456,0.325,2.217,0.914c0.954,0.739,2.261,1.75,4.664,1.75c1.23,0,2.42-0.293,3.481-0.919   c0.887-0.523,1.65-1.368,2.703-1.555c1.165-0.207,2.243,0.468,3.135,1.137c1.294,0.971,2.837,1.337,4.44,1.337   c1.475,0,2.772-0.753,4.026-1.48c1.931-1.12,3.167-1.303,5.121-0.171c1.332,0.772,2.841,1.646,4.599,1.65   c1.758-0.005,3.268-0.878,4.599-1.65c1.954-1.132,3.19-0.949,5.121,0.171c1.254,0.728,2.552,1.48,4.025,1.48   c1.604,0,3.146-0.366,4.44-1.337c0.893-0.669,1.971-1.343,3.135-1.137c1.053,0.187,1.817,1.032,2.703,1.555   c1.062,0.626,2.252,0.919,3.482,0.919c2.403,0,3.709-1.012,4.663-1.75c0.762-0.589,1.181-0.914,2.218-0.914   c1.103,0,1.998-0.894,1.998-1.998c0-1.104-0.896-1.998-1.998-1.998c-2.404,0-3.71,1.012-4.664,1.75   c-0.761,0.589-1.181,0.914-2.217,0.914c-1.037,0-1.456-0.325-2.217-0.914c-0.954-0.739-2.26-1.75-4.663-1.75   c-2.386,0-3.528,0.999-4.361,1.728c-2.307,2.017-4.831-0.419-7.038-1.271c-0.741-0.286-1.563-0.457-2.361-0.457   c-1.593,0-3.015,0.825-4.27,1.552c-0.773,0.448-1.594,0.992-2.516,1.044c-1.01,0.057-1.844-0.563-2.676-1.044   c-1.255-0.727-2.677-1.552-4.27-1.552c-0.797,0-1.621,0.171-2.361,0.457c-2.207,0.852-4.731,3.288-7.038,1.271   c-0.834-0.729-1.976-1.728-4.362-1.728c-2.403,0-3.709,1.012-4.663,1.75c-0.761,0.589-1.18,0.914-2.217,0.914   S16.038,40,15.277,39.411c-0.954-0.739-2.261-1.75-4.664-1.75c-1.104,0-1.998,0.895-1.998,1.998   C8.615,40.763,9.51,41.657,10.613,41.657z M80.642,65.964c-0.345-0.327-0.744-0.519-1.216-0.611   c-0.316-0.062-0.523-0.056-1.016-0.063H11.59c-0.493,0.008-0.699,0.001-1.016,0.063c-0.472,0.093-0.871,0.284-1.216,0.611   c-0.363,0.344-0.559,0.903-0.601,1.392c-0.036,0.411,0.01,0.866,0.104,1.268c0.169,0.711,0.42,1.415,0.78,2.1   c0.345,0.659,0.779,1.301,1.28,1.918c0.463,0.57,0.971,1.126,1.527,1.662c0.484,0.466,1.004,0.916,1.557,1.352   c2.003,1.576,4.495,2.891,7.352,3.805c0.555,0.177,1.124,0.34,1.706,0.485c1.818,0.458,3.73,0.747,5.661,0.945   c4.477,0.46,9.074,0.447,13.599,0.466c0.446,0.003,4.907,0.003,5.353,0c4.524-0.019,9.121-0.006,13.598-0.466   c1.931-0.198,3.843-0.487,5.661-0.945c0.582-0.146,1.15-0.309,1.706-0.485c2.857-0.914,5.349-2.229,7.352-3.805   c0.554-0.436,1.073-0.886,1.557-1.352c0.558-0.536,1.064-1.092,1.527-1.662c0.502-0.617,0.935-1.259,1.28-1.918   c0.36-0.685,0.611-1.389,0.78-2.1c0.095-0.401,0.141-0.856,0.104-1.268C81.199,66.867,81.004,66.308,80.642,65.964z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const clubbing = {
        path:'M85.723,12.818c0-3.072-0.348-6.152-1.033-9.152C84.534,2.983,83.928,2.5,83.228,2.5H16.772c-0.7,0-1.307,0.483-1.462,1.166  c-0.686,3-1.033,6.08-1.033,9.152c0,20.572,15.219,37.399,34.223,38.245v30.762c-0.834,5.699-13.438,7.648-18.167,7.916  c-1.398,0-2.536,1.138-2.536,2.535s1.138,2.535,2.536,2.535h39.334c1.398,0,2.536-1.138,2.536-2.535  c0-1.396-1.136-2.533-2.448-2.533h-0.004c-4.812-0.27-17.416-2.219-18.251-7.918V51.063C70.504,50.218,85.723,33.391,85.723,12.818z   M50,85.693c2.608,3.428,8.036,5.205,12.562,6.118',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const hobbies = {
        path: 'M10.8,54.9v19.6h9.8v9.8h9.8v-9.8h39.2v9.8h9.8v-9.8h9.8V54.9h9.8V25.5h-9.8v19.6h-9.8v-9.8h-9.8v-9.8h-9.8v9.8H40.2v-9.8   h-9.8v9.8h-9.8v9.8h-9.8h0V25.5H1.1v29.4H10.8L10.8,54.9z M59.8,45.1h9.8v9.8h-9.8V45.1z M30.4,45.1h9.8v9.8h-9.8V45.1z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }

        const culture = {
        path: 'M39.2105263,41.0860835 C39.2105263,40.3561397 38.6144259,39.7644033 37.8880196,39.7644033 L30.0067172,39.7644033 C29.2763169,39.7644033 28.6842105,40.3552961 28.6842105,41.0860835 L28.6842105,83.926376 L18.1578947,83.926376 L18.1578947,41.0860835 C18.1578947,40.3561397 17.5745353,39.7644033 16.8297778,39.7644033 L12.8947368,39.7644033 L12.8947368,31.7190052 C12.8947368,30.9887229 13.4774507,30.3967122 14.2174831,30.3967122 L95.7825169,30.3967122 C96.5130495,30.3967122 97.1052632,30.9827032 97.1052632,31.7190052 L97.1052632,39.7644033 L93.1702222,39.7644033 C92.4367235,39.7644033 91.8421053,40.3552961 91.8421053,41.0860835 L91.8421053,83.926376 L81.3157895,83.926376 L81.3157895,41.0860835 C81.3157895,40.3561397 80.7196891,39.7644033 79.9932828,39.7644033 L72.1119804,39.7644033 C71.3815801,39.7644033 70.7894737,40.3552961 70.7894737,41.0860835 L70.7894737,83.926376 L60.2631579,83.926376 L60.2631579,41.0860835 C60.2631579,40.3561397 59.6670575,39.7644033 58.9406512,39.7644033 L51.0593488,39.7644033 C50.3289485,39.7644033 49.7368421,40.3552961 49.7368421,41.0860835 L49.7368421,83.926376 L39.2105263,83.926376 L39.2105263,41.0860835 Z M6.31578947,93.2940672 L103.684211,93.2940672 L103.684211,104 L6.31578947,104 L6.31578947,93.2940672 Z M11.5789474,83.926376 L98.4210526,83.926376 L98.4210526,93.2940672 L11.5789474,93.2940672 L11.5789474,83.926376 Z M5,19.6748308 C5,18.9445485 5.57881465,18.2073693 6.28620788,18.0299529 L53.7137921,6.13497028 C54.4241451,5.95681158 55.5788147,5.9575539 56.2862079,6.13497028 L103.713792,18.0299529 C104.424145,18.2081116 105,18.9385288 105,19.6748308 L105,27.720229 L5,27.720229 L5,19.6748308 Z',
        fillColor: '#FF8F61',
        fillOpacity: 0.8,
        scale: 0.5,
        strokeWeight: 0,
        }







        //socket.io
        /*this.connection = this.UpdateEventsService.updateEvent()
        .subscribe((events) => {
          events.map((e) => {
            console.log(e);
            const marker = new google.maps.Marker({
                position: e.location,
                map: map,
                animation: google.maps.Animation.DROP,
                icon: image
              });

              const contentString =
                '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>' + '<img src="https://ca.slack-edge.com/T02CQ4EN4-U3KPHFCUW-807f02da0a86-72">' +
                '<h2 id="event-name" class="event-name" style="color:red">'+ e.name + '</h2>' +
                '<p>'+ e.description +'</p>' +
                '<h5 id="user-name" class="user-name"> '+ e.creator +' </h5>' +
                '</div>';

              const infowindow = new google.maps.InfoWindow({
                content: contentString,
                maxWidth: 200,
              });


            marker.addListener('click',
                () => infowindow.open(map, marker));
          });
        });
*/

        eventS.getEventList()
          .subscribe((events) => {
            events.map((e) => {
              console.log(e);
              const marker = new google.maps.Marker({
                position: e.location,
                map: map,
                animation: google.maps.Animation.DROP,
                icon: culture
              });

              const contentString =
                '<div id="content">' +
                '<div id="siteNotice">' +
                '</div>' + '<img src="https://ca.slack-edge.com/T02CQ4EN4-U3KPHFCUW-807f02da0a86-72">' +
                '<h2 id="event-name" class="event-name" style="color:red">' + e.name + '</h2>' +
                '<p>' + e.description + '</p>' +
                '<a routerLink="/">holi</a>' +
                '<a href="http://www.google.com">holi2</a>' +
                '<h5 id="user-name" class="user-name"> ' + e.creator + ' </h5>' +
                '</div>';

              const infowindow = new google.maps.InfoWindow({
                content: contentString,
                maxWidth: 200,
              });

              map.setOptions({styles: styles});
              marker.addListener('click',
                () => infowindow.open(map, marker));
            });
          });
      });
    });

  }

  successCb(user) {
    console.log('USER:::::::::::::::::',user)
    this.user = user;
    this.error = null;
  }
}
